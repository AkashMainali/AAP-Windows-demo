---
- name: Create a file and push it in GIT repo
  hosts: localhost
  gather_facts: false
  collections:
    - lvrfrc87.git_acp
  tasks:
    - name: Create /var/tmp/ansible directory
      ansible.builtin.file:
        path: /var/tmp/ansible
        state: directory

    # - name: Generate report
    #   ansible.builtin.template:
    #     src: report.j2
    #     dest: /var/tmp/ansible/ansible_file.txt
    #     mode: "0755"

    # - name: Clone Git repo
    #   ansible.builtin.shell: |
    #     "git clone {{ repo_url }}"
    #     expect "Username for 'https://github.schonfeld.com':"
    #     send "{{ git_username }}\n"
    #     expect "Password for 'https://amainali@schonfeld.com@github.schonfeld.com':"
    #     send "{{ git_password }}"
    #   args:
    #     chdir: "/var/tmp/"

    - name: Clone GIT Repository
      ansible.builtin.git:
        repo: "https://github.com/AkashMainali/AAP-Windows-demo.git"
        dest: "/var/tmp/ansible/AAP-Windows-demo"
        clone: true
        update: true

    - name: Generate report in the cloned directory
      ansible.builtin.template:
        src: report.j2
        dest: /var/tmp/ansible/AAP-Windows-demo/ansible_file.txt
        mode: "0755"

    # - name: Copy folders to Git repo
    #   ansible.builtin.copy:
    #     dest: "/var/tmp/ansible/AAP-Windows-demo/ansible_file.txt"
    #     src: "/var/tmp/ansible/ansible_file.txt"
    #     force: true

    # - name: Push the Git repo
    #   ansible.builtin.shell: |
    #     git config --global user.email amainali868@gmail.com
    #     git config --global user.name akashmainali
    #     git add -A && git commit -m "RHAAP: Automated Commit by Ansible  " && git push
    #   args:
    #     chdir: "{{ tmp_repo_directory }}"
    #   register: output
    #   failed_when: >
    #     output.msg != "" and
    #     ("error" in output.msg or
    #     "conflict" in output.msg or
    #     "Errno" in output.msg or
    #     "fatal" in output.msg or
    #     (output.stdout != "" and
    #     "nothing to commit, working tree clean" not in output.stdout) or
    #     (output.stderr != ""))`

    # - name: Entering git details
    #   ansible.builtin.shell: |
    #     git config --global user.email "amainali868@gmail.com"
    #     git config --global user.name "Akash Mainali"

    # - name: HTTPS | push all changes
    #   environment:
    #     GIT_AUTHOR_NAME: "akashmainali"
    #     GIT_AUTHOR_EMAIL: "amainali868@gmail.com"
    #     GIT_COMMITTER_NAME: "akashmainali"
    #     GIT_COMMITTER_EMAIL: "amainali868@gmail.com"
    #   git_acp:
    #     # mode: https
    #     # user: "{{ git_username }}"
    #     # token: "{{ git_password }}"
    #     path: "/var/tmp/ansible/AAP-Windows-demo/"
    #     branch: main
    #     comment: " Add all the things."
    #     add: [ "." ]
    #     url: "https://github.com/AkashMainali/AAP-Windows-demo.git"

    - name: Git Add and Git Commit
      ansible.builtin.shell: |
        git config --global user.email "amainali868@gmail.com"
        git config --global user.name "Akash Mainali"
        git status
      # git add -A
      # git commit -m "RHAAP: Automated Commit by Ansible"
      args:
        chdir: "/var/tmp/ansible/AAP-Windows-demo/"
      register: git_add_status

    - name: Debug git add status
      ansible.builtin.debug:
        msg: "{{ git_add_status.stdout_lines }}"

    - name: HTTPS | push all changes
      git_acp:
        # mode: https
        # user: "{{ git_username }}"
        # token: "{{ git_password }}"
        path: "/var/tmp/ansible/AAP-Windows-demo/"
        comment: " Add all the things."
        push: true
        url: "https://github.com/AkashMainali/AAP-Windows-demo.git"

    # - name: Git Push
    #   ansible.builtin.shell: |
    #     git push
    #   args:
    #     chdir: "/var/tmp/ansible/AAP-Windows-demo/"
      # register: output
      # failed_when: >
      #   output.msg != "" and
      #   ("error" in output.msg or
      #   "conflict" in output.msg or
      #   "Errno" in output.msg or
      #   "fatal" in output.msg or
      #   (output.stdout != "" and
      #   "nothing to commit, working tree clean" not in output.stdout) or
      #   (output.stderr != ""))